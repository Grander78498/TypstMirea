#import ("/src/titul.typ"): *
#import ("/src/preamble.typ"): *
#set page(margin: (top: 0pt, bottom: 0pt, left: 0pt, right: 0pt))
#figure(image("/img/cursed_titul1.png", height: 80%), caption: none)
#figure(image("/img/cursed_titul2.png", height: 80%), caption: none)
#figure(image("/img/cursed_titul3.png", height: 80%), caption: none)
#show: main

#show: template

#outline()

#heading("Введение", numbering: none)

В современном мире, где объем информации стремительно растет, а системы поддержки принятия решений становятся неотъемлемой частью деятельности организаций и предприятий, возникает необходимость в эффективных методах анализа данных и оптимизации процессов.

Системный анализ данных является ключевым направлением, объединяющим гуманитарные и формальные методы познания. Современные подходы в этой области опираются на интеграцию концепций философии, математики и кибернетики, позволяя моделировать сложные системы и анализировать их поведение. Одним из таких инструментов является использование онтологий --- представлений о моделях мира, которые обеспечивают структуризацию информации, упрощая её анализ и обработку.

В рамках данной курсовой работы была поставлена задача разработки и реализации онтологии "Музыкальная индустрия", а также исследования и применения различных алгоритмов оптимизации для решения задач в этой области. Онтология "Музыкальная индустрия" представляет собой структурированное описание ключевых понятий и отношений в музыкальной индустрии, что позволяет более эффективно анализировать и обрабатывать данные, связанные с этой сферой.

Вместе с онтологиями в системах анализа данных и поддержки принятия решений активно применяются алгоритмы оптимизации, такие как имитация отжига, алгоритм роя частиц, муравьиный, пчелиный и электромагнитный алгоритмы. Эти методы основаны на принципах самоорганизации и коллективного поведения, которые наблюдаются в природе. Использование таких подходов позволяет моделировать сложные системы и находить оптимальные решения в многомерных пространствах.

#let headers = ([= Онтология], [= Метод имитации отжига], [= Алгоритм роя частиц], [= Муравьиный алгоритм], [= Алгоритм пчелиной колонии], [= Электромагнитный алгоритм])
#for (i, header) in headers.enumerate() {
  header
  import ("prac" + str(i + 1) + "_portable.typ") as prac: *
  prac.intro
  prac.main
  [== Выводы по разделу]
  prac.outro
}

#heading("Заключение", numbering: none)
В ходе выполнения работы изучены основы системного анализа данных и применения онтологий, а также изучены и реализованы различные методы оптимизации, вдохновлённые природой.

Разработана онтология музыкальной индустрии, включающая классы, слоты и экземпляры. Онтология включает в себя 4 класса, позволяющие описать простые отношения внутри выбранной области. Для описания онтологии использован инструмент Protégé, также он используется для написания запросов на получение объектов по различным атрибутам. Также написана программа на языке Python для описания онтологии и написания запросов.

Для решения задачи коммивояжёра и задачи оптимизации функций от многих переменных реализовано несколько алгоритмов, позволяющих быстро найти оптимальное решение в поставленной задаче.

Метод имитации отжига является простым алгоритмом, который существенно полагается на случайную генерацию, однако за счёт механизма отжига, когда при высокой температуре может быть принято неоптимальное решение, алгоритм показывает хорошие результаты при решении как задачи коммивояжёра, так и задачи нахождения глобального минимума функции от нескольких переменных.

Роевой алгоритм предназначен для оптимизации функций, но находит более оптимальное решение, чем метод имитации отжига. При этом, он является простым в реализации и не требует сложной метаоптимизации.

Муравьиный алгоритм предназначен для решения задачи коммивояжёра, и имеет хорошую сходимость к оптимальному решению. Однако значительным недостатком алгоритма является зависимость от большого количества свободных аргументов, поскольку при неверной их комбинации алгоритм показывает неудовлетворительные результаты.

Алгоритм пчелиной колонии предназначен для нахождения глобального минимума функций. Алгоритм имеет хорошую сходимость и лучше сходится к оптимальному решению по сравнению с роевым алгоритмом, однако недостатком является зависимость от регулирования свободных параметров.

Электромагнитный алгоритм предназначен для оптимизации функций. Свободные параметры меньше влияют на данный алгоритм по сравнению с алгоритмом пчелиной колонии, при этом алгоритм показывает лучшие показатели сходимости к глобальному минимуму.

Все описанные алгоритмы реализованы на языке Python для решения задачи коммивояжёра в произвольном графе и нахождения глобального минимума функции Растригина, которая примечательна наличием большого количества локальных минимумов.

#bibliography("/authors.bib", style: "/gost-r-7-0-5-2008-numeric-alphabetical.csl", title: "Список использованных источников", full: true)

#appendix()

#for i in range(headers.len()) {
  import ("prac" + str(i + 1) + "_portable.typ") as prac: app
  prac.app
}